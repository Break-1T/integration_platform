name: Publish NuGet Package

on:
  push:
    branches:
      - master # Запускать только при пуше в master (или другую основную ветку)
  workflow_dispatch: # Также позволяет запустить вручную

jobs:
  tag_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # Укажите нужную версию .NET SDK

      - name: Get latest tag
        id: get_tag
        run: |
          # Получаем последний тег
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Последний тег: $latest_tag"
          echo "tag=$latest_tag" >> $GITHUB_ENV

      - name: Calculate next tag
        id: next_tag
        run: |
          # Удаляем префикс 'v' и разбиваем на части
          tag_without_v=${{ env.tag#v }} # Удаляем 'v' только если он есть в начале строки
          IFS='.' read -ra VERSION <<< "$tag_without_v"
          major=${VERSION[0]}
          minor=${VERSION[1]}
          patch=${VERSION[2]}
          next_patch=$((patch + 1)) # Инкремент патч-версии
          new_tag="v$major.$minor.$next_patch"
          echo "next_tag=$new_tag" >> $GITHUB_ENV
          echo "Новый тег: $new_tag"

      - name: Create new tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.next_tag }}
          git push origin ${{ env.next_tag }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore --configuration Release

      - name: Pack NuGet package
        run: dotnet pack --no-build --configuration Release -o ./nuget

      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push "./nuget/*.nupkg" \
            --source "github" \
            --api-key "$GITHUB_TOKEN"
